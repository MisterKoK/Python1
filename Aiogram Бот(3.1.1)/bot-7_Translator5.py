# –ù–∞–π—Ç–∏ –±–æ—Ç–∞ @BotFather, –Ω–∞–ø–∏—Å–∞—Ç—å –µ–º—É /start, –∏–ª–∏ /newbot, –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª—è
# https://kokos.mozellosite.com/
# MrKoKstelebot

import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from aiogram.enums import ParseMode
from aiogram import F
from aiogram.types import FSInputFile   #, URLInputFile

# –∏–º–ø–æ—Ä—Ç—ã
from config_reader import config

import mykeyboards

# –î–ª—è –∑–∞–ø–∏—Å–µ–π —Å —Ç–∏–ø–æ–º Secret* –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
# –≤—ã–∑—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥ get_secret_value(),
# —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç–æ—è—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–º–µ—Å—Ç–æ '*******'
bot = Bot(token=config.bot_token.get_secret_value())


# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()

#========= –°–æ—Å—Ç–æ—è–Ω–∏—è
from aiogram.fsm.state import State, StatesGroup
class Form(StatesGroup):
    text_to_translate = State()
    text_to_translate2 = State()
#========

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        f"Hello, <b>{message.from_user.full_name}</b>",
        parse_mode=ParseMode.HTML
    )
    await message.answer(
        '–ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç <a href="https://kokos.mozellosite.com">KoKos Mozellosite</a> \n'
        "–Ø –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–π –±–æ—Ç <u>–ú–∏—Å—Ç–µ—Ä–∞ –ö–æ–ö–∞</u>, –∏ –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ –Ω–µ —Å–æ–±–∏—Ä–∞—é—Å—å.\n"
        "–î–ª—è —Å–ø—Ä–∞–≤–∫–∏ <b>/help</b>",
        parse_mode=ParseMode.HTML
    )

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /help
@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    await message.answer(
        "–Ø –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–π –±–æ—Ç <u>–ú–∏—Å—Ç–µ—Ä–∞ –ö–æ–ö–∞</u>\n"
        "–ú—É–∑—ã–∫–∞ –•–∏—Ç-–º–µ—Å—è—Ü–∞ <b>/music</b>\n"
        "–≠–º–æ–¥–∑–∏ <b>/dice</b>\n"
        '<a href="https://files.fm/u/aqw2p3uj">1_–ö–£–†–°</a>\n'
        '<a href="https://files.fm/u/gqjv2wqqp">2_–ö–£–†–°</a>\n'
        '<a href="https://files.fm/u/2bux9z5q">3_–ö–£–†–°</a>\n'
        "–ö–æ—Ç–ª–µ—Ç–∫–∏ <b>/kotletki</b>\n"
        "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ <b>/schedule</b>\n"
        "–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ <b>/translate</b>\n",
        disable_web_page_preview=True,  # —É–±—Ä–∞—Ç—å –ø—Ä–µ–≤—å—é —Å—Å—ã–ª–∫–∏
        parse_mode=ParseMode.HTML
    )

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /schedule
@dp.message(Command("schedule"))
async def cmd_help(message: types.Message):
    await message.answer(
        "<b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</b>\n"
        '1 —É—Ä–æ–∫ 8.30 - 9.15\n'
        '2 —É—Ä–æ–∫ 9.30 - 10.15\n'
        '3 —É—Ä–æ–∫ 10.20 - 11.05\n'
        '4 —É—Ä–æ–∫ 11.10 - 11.55\n'
        '5 —É—Ä–æ–∫ 12.15 - 13.00\n'
        '6 —É—Ä–æ–∫ 13.05 - 13.50\n'
        '7 —É—Ä–æ–∫ 13.55 - 14.40\n'
        '8 —É—Ä–æ–∫ 14.45 - 15.30\n',
        disable_web_page_preview=True,  # —É–±—Ä–∞—Ç—å –ø—Ä–µ–≤—å—é —Å—Å—ã–ª–∫–∏
        parse_mode=ParseMode.HTML
    )

# –î–æ–±–∞–≤–ª—è—Ç—å —ç–º–æ–¥–∑–∏
@dp.message(Command("dice"))
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üé≤")

# –ö–Ω–æ–ø–∫–∏ –∫–æ—Ç–ª–µ—Ç–∫–∏ ============
@dp.message(Command("kotletki"))
async def cmd_start(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text="–° –ø—é—Ä–µ—à–∫–æ–π"),
            types.KeyboardButton(text="–ë–µ–∑ –ø—é—Ä–µ—à–∫–∏")
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–¥–∞—á–∏"
    )
    await message.answer("–ö–∞–∫ –ø–æ–¥–∞–≤–∞—Ç—å –∫–æ—Ç–ª–µ—Ç—ã?", reply_markup=keyboard)

@dp.message(F.text.lower() == "—Å –ø—é—Ä–µ—à–∫–æ–π")
async def with_puree(message: types.Message):
    #await message.reply("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!")
    await message.reply("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!", reply_markup=types.ReplyKeyboardRemove())

@dp.message(F.text.lower() == "–±–µ–∑ –ø—é—Ä–µ—à–∫–∏")
async def without_puree(message: types.Message):
    await message.reply("–¢–∞–∫ –Ω–µ–≤–∫—É—Å–Ω–æ! –ë–µ—Ä–∏ —Å –ø—é—Ä–µ—à–∫–æ–π!")
    #await message.reply("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!", reply_markup=types.ReplyKeyboardRemove())

# –û—Ç–ø—Ä–∞–≤–∫–∞ Music =======================
audio_mp3 = FSInputFile(
    'media/mot-sluchajjnosti-ne-sluchajjny.mp3',
#audio_mp3 = URLInputFile(
#    'https://cloud.mail.ru/public/UQ9u/DygGWtRtR',
    filename="–°–ª—É—á–∞–π–Ω–æ—Å—Ç–∏ –Ω–µ —Å–ª—É—á–∞–π–Ω—ã"
)

@dp.message(Command("music"))
async def music(message: types.Message):
    await message.answer_audio(audio=audio_mp3, caption='` üòè —ç—Ç–æ —Ç–µ—Å—Ç`', parse_mode='MarkdownV2' ) # , title='–°–ª—É—á–∞–π–Ω–æ—Å—Ç–∏ –Ω–µ —Å–ª—É—á–∞–π–Ω—ã'

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ ===================
@dp.message(Command('photo'))
async def get_photo(message: types.Message):
    await message.answer_photo(photo=FSInputFile('media/1.jpg', filename='–°–Ω–µ–≥–æ–≤–∏–∫'), caption='–≠—Ç–æ —Å–Ω–µ–≥–æ–≤–∏–∫!')

# –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ ======================
@dp.message(Command("translate"))
async def start_translate(message: types.Message):
    await message.answer("–ö–∞–∫ –±—É–¥–µ–º –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å?", reply_markup= mykeyboards.keyboard)

# –ù–ê–ñ–ê–¢–ò–ï –ò–ù–õ–ê–ô–ù –ö–ù–û–ü–û–ö
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
# –ö–ù–û–ü–ö–ê 1
@dp.callback_query(F.data == 'big_button_1_pressed')
async def process_button_1_press(callback: CallbackQuery, state: FSMContext):
    if callback.message.text != 'TRANSLATE FROM RUSSIAN':
        await callback.message.edit_text(
            text='TRANSLATE FROM RUSSIAN',
            reply_markup=callback.message.reply_markup
        )
    #await callback.answer()
    await state.set_state(Form.text_to_translate)
    #await Form.text_to_translate.state
    #await message.answer("–ö–∞–∫ –±—É–¥–µ–º –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å?", reply_markup= mykeyboards.keyboard)
from aiogram.filters import StateFilter
@dp.message(StateFilter(Form.text_to_translate))
async def send_translate_text(message: types.Message, state: FSMContext):
    from translate import trans
    translated_text = trans(message.text)
    #print(message.text)
    print(translated_text)
    await message.answer(text=f'{translated_text[0]}\n{translated_text[-1]}')
    await message.answer("–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫Ru")

# –ö–ù–û–ü–ö–ê 2
@dp.callback_query(F.data == 'big_button_2_pressed')
async def process_button_2_press(callback: CallbackQuery, state: FSMContext):
    if callback.message.text != 'TRANSLATE FROM VIETNAMESE':
        await callback.message.edit_text(
            text='TRANSLATE FROM VIETNAMESE',
            reply_markup=callback.message.reply_markup
        )
    # await callback.answer()
    await state.set_state(Form.text_to_translate2)
@dp.message(StateFilter(Form.text_to_translate2))
async def send_translate_text(message: types.Message, state: FSMContext):
    from translate import transru
    translated_text = transru(message.text)
    print(translated_text)
    await message.answer(text=f'{translated_text[0]}\n{translated_text[-1]}')
    await message.answer("–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫Vi")
# –ö–æ–Ω–µ—Ü –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞ =============================



# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot, skip_updates=True)  # –Ω–µ –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ–≥–¥–∞ –±—ã–ª –æ—Ñ–ª–∞–π–Ω

if __name__ == "__main__":
    asyncio.run(main())
